// Code generated by protoc-gen-go.
// source: mysqlx_connection.proto
// DO NOT EDIT!

package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// a Capability
//
// a tuple of a ``name`` and a :protobuf:msg:`Mysqlx.Datatypes::Any`
type Capability struct {
	Name             *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Value            *Any    `protobuf:"bytes,2,req,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Capability) Reset()                    { *m = Capability{} }
func (m *Capability) String() string            { return proto1.CompactTextString(m) }
func (*Capability) ProtoMessage()               {}
func (*Capability) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *Capability) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Capability) GetValue() *Any {
	if m != nil {
		return m.Value
	}
	return nil
}

// Capabilities
type Capabilities struct {
	Capabilities     []*Capability `protobuf:"bytes,1,rep,name=capabilities" json:"capabilities,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *Capabilities) Reset()                    { *m = Capabilities{} }
func (m *Capabilities) String() string            { return proto1.CompactTextString(m) }
func (*Capabilities) ProtoMessage()               {}
func (*Capabilities) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *Capabilities) GetCapabilities() []*Capability {
	if m != nil {
		return m.Capabilities
	}
	return nil
}

// get supported connection capabilities and their current state
//
//   :returns: :protobuf:msg:`Mysqlx.Connection::Capabilities` or :protobuf:msg:`Mysqlx::Error`
//
type CapabilitiesGet struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CapabilitiesGet) Reset()                    { *m = CapabilitiesGet{} }
func (m *CapabilitiesGet) String() string            { return proto1.CompactTextString(m) }
func (*CapabilitiesGet) ProtoMessage()               {}
func (*CapabilitiesGet) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

// sets connection capabilities atomically
//
// only provided values are changed, other values are left unchanged.
// If any of the changes fails, all changes are discarded.
//
// :precond: active sessions == 0
// :returns: :protobuf:msg:`Mysqlx::Ok` or :protobuf:msg:`Mysqlx::Error`
type CapabilitiesSet struct {
	Capabilities     *Capabilities `protobuf:"bytes,1,req,name=capabilities" json:"capabilities,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *CapabilitiesSet) Reset()                    { *m = CapabilitiesSet{} }
func (m *CapabilitiesSet) String() string            { return proto1.CompactTextString(m) }
func (*CapabilitiesSet) ProtoMessage()               {}
func (*CapabilitiesSet) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *CapabilitiesSet) GetCapabilities() *Capabilities {
	if m != nil {
		return m.Capabilities
	}
	return nil
}

// announce to the server that the client wants to close the connection
//
// it discards any session state of the server
//
// :Returns: :protobuf:msg:`Mysqlx::Ok`
type Close struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *Close) Reset()                    { *m = Close{} }
func (m *Close) String() string            { return proto1.CompactTextString(m) }
func (*Close) ProtoMessage()               {}
func (*Close) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func init() {
	proto1.RegisterType((*Capability)(nil), "Mysqlx.Connection.Capability")
	proto1.RegisterType((*Capabilities)(nil), "Mysqlx.Connection.Capabilities")
	proto1.RegisterType((*CapabilitiesGet)(nil), "Mysqlx.Connection.CapabilitiesGet")
	proto1.RegisterType((*CapabilitiesSet)(nil), "Mysqlx.Connection.CapabilitiesSet")
	proto1.RegisterType((*Close)(nil), "Mysqlx.Connection.Close")
}

func init() { proto1.RegisterFile("mysqlx_connection.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 221 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x12, 0xcf, 0xad, 0x2c, 0x2e,
	0xcc, 0xa9, 0x88, 0x4f, 0xce, 0xcf, 0xcb, 0x4b, 0x4d, 0x2e, 0xc9, 0xcc, 0xcf, 0xd3, 0x2b, 0x28,
	0xca, 0x2f, 0xc9, 0x17, 0x12, 0xf4, 0x05, 0x4b, 0xe8, 0x39, 0xc3, 0x25, 0xa4, 0xc4, 0xa0, 0x6a,
	0x53, 0x12, 0x4b, 0x12, 0x4b, 0x2a, 0x0b, 0x52, 0x8b, 0x21, 0x4a, 0x95, 0x1c, 0xb8, 0xb8, 0x9c,
	0x13, 0x0b, 0x12, 0x93, 0x32, 0x73, 0x32, 0x4b, 0x2a, 0x85, 0x78, 0xb8, 0x58, 0xf2, 0x12, 0x73,
	0x53, 0x25, 0x18, 0x15, 0x98, 0x34, 0x38, 0x85, 0x54, 0xb8, 0x58, 0xcb, 0x12, 0x73, 0x4a, 0x53,
	0x25, 0x98, 0x14, 0x98, 0x34, 0xb8, 0x8d, 0x44, 0xf5, 0xa0, 0xc6, 0xba, 0xc0, 0xcd, 0x70, 0xcc,
	0xab, 0x54, 0x72, 0xe6, 0xe2, 0x81, 0x9b, 0x90, 0x99, 0x5a, 0x2c, 0x64, 0xcc, 0xc5, 0x93, 0x8c,
	0xc4, 0x97, 0x60, 0x54, 0x60, 0xd6, 0xe0, 0x36, 0x92, 0xd5, 0xc3, 0x70, 0x93, 0x1e, 0xc2, 0x62,
	0x25, 0x41, 0x2e, 0x7e, 0x64, 0x43, 0xdc, 0x53, 0x4b, 0x94, 0x3c, 0x50, 0x85, 0x82, 0x53, 0x4b,
	0x84, 0x4c, 0x31, 0x8c, 0x06, 0xb9, 0x4b, 0x1e, 0x9f, 0xd1, 0x99, 0xa9, 0xc5, 0x4a, 0xec, 0x5c,
	0xac, 0xce, 0x39, 0xf9, 0xc5, 0xa9, 0x4e, 0xaa, 0x5c, 0x32, 0xc9, 0xf9, 0xb9, 0x7a, 0xe0, 0xa0,
	0xd0, 0x4b, 0xce, 0x82, 0x30, 0x2a, 0x20, 0x21, 0x91, 0x54, 0x9a, 0x16, 0xc5, 0x0a, 0x66, 0x01,
	0x02, 0x00, 0x00, 0xff, 0xff, 0x71, 0x28, 0x84, 0x89, 0x58, 0x01, 0x00, 0x00,
}
